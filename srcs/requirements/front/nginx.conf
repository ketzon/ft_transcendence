# please, don't touch anything.

# max number of processes that nginx can create at any time
# set to auto instead of 1 because https requires additional CPU ressources
worker_processes  auto;

events {
  # maximum number of simultaneous connections to the server
  # capped at 1024 to avoid DDoS attacks
  worker_connections  1024;
}

http {

  include       mime.types;

  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  server { # this block automatically redirects all http request to https
    listen       8080;
    listen       [::]:80;
    server_name  localhost;
    return 301 https://$server_name$request_uri;
  }
  
  server { 
      listen 443 ssl;
      listen [::]:443 ssl;
      http2 on;
      ssl_certificate localhost+2.pem;
      ssl_certificate_key localhost+2-key.pem;
      server_name  localhost;

      location / {
          root   /etc/nginx/html;
          index  index.html;
          try_files $uri $uri/ /index.html;
      }

      # transmits API calls to the backend server
      location /routes {
          proxy_pass http://back:3000;
          proxy_set_header 'Access-Control-Allow-Origin' '*';
          proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          proxy_set_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          proxy_set_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }

      location /api/ {
          proxy_pass http://back:3000/;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      location /user {
          proxy_pass http://back:3000;
          proxy_set_header 'Access-Control-Allow-Origin' '*';
          proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          proxy_set_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          proxy_set_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }
  }
}
