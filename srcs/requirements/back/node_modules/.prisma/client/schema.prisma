// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String //@unique uncomment post dev
  username String //@unique uncomment post dev
  password String
  avatar   String @default("./public/avatar.png")

  otp        Int?
  otp_expire BigInt?

  stats          Stats? @relation
  // friend    Friendship[]  @relation("Friendship")
  gamesAsPlayer1 Game[] @relation("Player1")
  gamesAsPlayer2 Game[] @relation("Player2")
}

model Stats {
  id     Int @id @default(autoincrement())
  game   Int @default(0)
  wins   Int @default(0)
  looses Int @default(0)

  User   User @relation(onDelete: Cascade, fields: [userId], references: [id])
  userId Int  @unique
}

model Game {
  id          Int      @id @default(autoincrement())
  player1Id   Int
  player2Id   Int
  score1      Int
  score2      Int
  totalMoves  Int
  avgMoveTime String
  duration    String
  date        DateTime @default(now())
  player1     User     @relation("Player1", fields: [player1Id], references: [id])
  player2     User     @relation("Player2", fields: [player2Id], references: [id])
}

// model Friends {
//   id      Int @id @default(autoincrement())

//   user1_id  Int
//   user2_id  Int

//   user1     User @relation("Friendship", fields: [user1_id], references: [id])
//   user2     User @relation("Friendship", fields: [user2_id], references: [id])

//   @@unique([user1_id, user2_id])
// }

// model Friendship {
//   id        Int  @id @default(autoincrement())
//   userId    Int
//   friendId  Int

//   user      User @relation("UserFriends", fields: [userId], references: [id])
//   friend    User @relation("UserFriends", fields: [friendId], references: [id])

//   @@unique([userId, friendId]) // EmpÃªche les doublons
// }
